<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="13" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="4807" started-at="2017-04-28T22:38:20Z" finished-at="2017-04-28T22:38:25Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="4807" started-at="2017-04-28T22:38:20Z" finished-at="2017-04-28T22:38:25Z">
      <class name="test.DealDeckTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="438" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="DealDeck()[pri:0, instance:test.DealDeckTest@7158daf2]" name="DealDeck" duration-ms="22" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DealDeck -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="11" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getCardAtLocation()[pri:0, instance:test.DealDeckTest@7158daf2]" name="getCardAtLocation" duration-ms="1" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCardAtLocation -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="11" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getDeckThroughs()[pri:0, instance:test.DealDeckTest@7158daf2]" name="getDeckThroughs" duration-ms="2" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeckThroughs -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="10" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="hasDealsLeft()[pri:0, instance:test.DealDeckTest@7158daf2]" name="hasDealsLeft" duration-ms="2394" started-at="2017-04-28T17:38:20Z" finished-at="2017-04-28T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasDealsLeft -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="23" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="isValidMoveCard()[pri:0, instance:test.DealDeckTest@7158daf2]" name="isValidMoveCard" duration-ms="19" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:304)
	at org.testng.Assert.assertEquals(Assert.java:314)
	at test.DealDeckTest.isValidMoveCard(DealDeckTest.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidMoveCard -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="9" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="FAIL" signature="isValidMoveCardStack()[pri:0, instance:test.DealDeckTest@7158daf2]" name="isValidMoveCardStack" duration-ms="14" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:304)
	at org.testng.Assert.assertEquals(Assert.java:314)
	at test.DealDeckTest.isValidMoveCardStack(DealDeckTest.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidMoveCardStack -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="8" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="pop()[pri:0, instance:test.DealDeckTest@7158daf2]" name="pop" duration-ms="973" started-at="2017-04-28T17:38:23Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pop -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="14" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="reset()[pri:0, instance:test.DealDeckTest@7158daf2]" name="reset" duration-ms="1" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="9" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setDeck()[pri:0, instance:test.DealDeckTest@7158daf2]" name="setDeck" duration-ms="9" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDeck -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="11" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setDeckThroughs()[pri:0, instance:test.DealDeckTest@7158daf2]" name="setDeckThroughs" duration-ms="2" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDeckThroughs -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="8" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setDifficulty()[pri:0, instance:test.DealDeckTest@7158daf2]" name="setDifficulty" duration-ms="2" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDifficulty -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="8" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setDrawCount()[pri:0, instance:test.DealDeckTest@7158daf2]" name="setDrawCount" duration-ms="22" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDrawCount -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="beforeClass" is-config="true" duration-ms="5" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="undoPop()[pri:0, instance:test.DealDeckTest@7158daf2]" name="undoPop" duration-ms="711" started-at="2017-04-28T17:38:24Z" finished-at="2017-04-28T17:38:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- undoPop -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@7158daf2]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-04-28T17:38:25Z" finished-at="2017-04-28T17:38:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.DealDeckTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
