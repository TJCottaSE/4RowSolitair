<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="13" ignored="0" total="119" passed="106">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="15143" started-at="2017-04-30T08:13:54Z" finished-at="2017-04-30T08:14:09Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="15143" started-at="2017-04-30T08:13:54Z" finished-at="2017-04-30T08:14:09Z">
      <class name="test.SingleCellTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="setUp" is-config="true" duration-ms="3" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetCardAtLocationPoint()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="testGetCardAtLocationPoint" duration-ms="52" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCardAtLocationPoint -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="setUp" is-config="true" duration-ms="4" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsValidMoveCard()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="testIsValidMoveCard" duration-ms="1" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidMoveCard -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="setUp" is-config="true" duration-ms="4" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsValidMoveCardStack()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="testIsValidMoveCardStack" duration-ms="1" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidMoveCardStack -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="setUp" is-config="true" duration-ms="2" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPushCard()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="testPushCard" duration-ms="1" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPushCard -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.SingleCellTest@3e1fd62b]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.SingleCellTest -->
      <class name="test.SolitaireLayoutTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="SolitaireLayout()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="SolitaireLayout" duration-ms="0" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SolitaireLayout -->
        <test-method status="PASS" signature="addLayoutComponent()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="addLayoutComponent" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addLayoutComponent -->
        <test-method status="PASS" signature="layoutContainer()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="layoutContainer" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- layoutContainer -->
        <test-method status="PASS" signature="minimumLayoutSize()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="minimumLayoutSize" duration-ms="2" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Not supported yet.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Not supported yet.
	at FourRowSolitaire.SolitaireLayout.minimumLayoutSize(SolitaireLayout.java:204)
	at test.SolitaireLayoutTest.minimumLayoutSize(SolitaireLayoutTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minimumLayoutSize -->
        <test-method status="PASS" signature="preferredLayoutSize()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="preferredLayoutSize" duration-ms="0" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[Not supported yet.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: Not supported yet.
	at FourRowSolitaire.SolitaireLayout.preferredLayoutSize(SolitaireLayout.java:199)
	at test.SolitaireLayoutTest.preferredLayoutSize(SolitaireLayoutTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preferredLayoutSize -->
        <test-method status="PASS" signature="removeLayoutComponent()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="removeLayoutComponent" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeLayoutComponent -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.SolitaireLayoutTest@558b4942]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.SolitaireLayoutTest -->
      <class name="test.CardStackTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="13" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddCard()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testAddCard" duration-ms="4" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCard -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="7" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddStack()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testAddStack" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStack -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="8" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetAvailableCards()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testGetAvailableCards" duration-ms="14" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAvailableCards -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="8" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetBottom()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testGetBottom" duration-ms="9" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBottom -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="13" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testGetCardAtLocationIntIndex()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testGetCardAtLocationIntIndex" duration-ms="8" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCardAtLocationIntIndex -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="7" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetCardAtLocationPoint()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testGetCardAtLocationPoint" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCardAtLocationPoint -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="14" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetStackCard()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testGetStackCard" duration-ms="19" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStackCard -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="11" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testIsEmpty" duration-ms="2" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="10" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsValidMoveCard()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testIsValidMoveCard" duration-ms="3" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidMoveCard -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="7" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIsValidMoveCardStack()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testIsValidMoveCardStack" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidMoveCardStack -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="8" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLength()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testLength" duration-ms="4" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLength -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="7" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testPeek()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testPeek" duration-ms="4" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPeek -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="7" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPop()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testPop" duration-ms="3" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPop -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="10" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPopCardStack()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testPopCardStack" duration-ms="2" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopCardStack -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="12" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPushCard()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testPushCard" duration-ms="3" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPushCard -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="8" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPushCardStack()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testPushCardStack" duration-ms="4" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPushCardStack -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="9" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testSearch()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testSearch" duration-ms="10" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardStackTest@6413d7e7]" name="setUp" is-config="true" duration-ms="11" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUndoStackMove()[pri:0, instance:test.CardStackTest@6413d7e7]" name="testUndoStackMove" duration-ms="11" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndoStackMove -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardStackTest@6413d7e7]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CardStackTest -->
      <class name="test.DeckTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.DeckTest@250a9031]" name="setUp" is-config="true" duration-ms="173" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDeck()[pri:0, instance:test.DeckTest@250a9031]" name="testDeck" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeck -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.DeckTest@250a9031]" name="setUp" is-config="true" duration-ms="161" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.DeckTest@250a9031]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testGetDeck()[pri:0, instance:test.DeckTest@250a9031]" name="testGetDeck" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDeck -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.DeckTest@250a9031]" name="setUp" is-config="true" duration-ms="163" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.DeckTest@250a9031]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testGetDeckLinkedListOfInteger()[pri:0, instance:test.DeckTest@250a9031]" name="testGetDeckLinkedListOfInteger" duration-ms="4" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDeckLinkedListOfInteger -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.DeckTest@250a9031]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.DeckTest@250a9031]" name="setUp" is-config="true" duration-ms="153" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetDeckNumber()[pri:0, instance:test.DeckTest@250a9031]" name="testGetDeckNumber" duration-ms="1" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDeckNumber -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.DeckTest@250a9031]" name="setUp" is-config="true" duration-ms="140" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.DeckTest@250a9031]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testShuffle()[pri:0, instance:test.DeckTest@250a9031]" name="testShuffle" duration-ms="1" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShuffle -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.DeckTest@250a9031]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.DeckTest -->
      <class name="test.FourRowSolitaireTest">
        <test-method status="PASS" signature="FourRowSolitaire()[pri:0, instance:test.FourRowSolitaireTest@4f654cee]" name="FourRowSolitaire" duration-ms="235" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FourRowSolitaire -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.FourRowSolitaireTest@4f654cee]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="actionPerformed()[pri:0, instance:test.FourRowSolitaireTest@4f654cee]" name="actionPerformed" duration-ms="62" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- actionPerformed -->
        <test-method status="PASS" signature="checkForUpdate()[pri:0, instance:test.FourRowSolitaireTest@4f654cee]" name="checkForUpdate" duration-ms="345" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForUpdate -->
        <test-method status="PASS" signature="loadData()[pri:0, instance:test.FourRowSolitaireTest@4f654cee]" name="loadData" duration-ms="254" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadData -->
        <test-method status="PASS" signature="main()[pri:0, instance:test.FourRowSolitaireTest@4f654cee]" name="main" duration-ms="308" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.FourRowSolitaireTest@4f654cee]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.FourRowSolitaireTest -->
      <class name="test.SolitairePanelTest">
        <test-method status="PASS" signature="SolitairePanel()[pri:0, instance:test.SolitairePanelTest[,0,0,0x0,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]]" name="SolitairePanel" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SolitairePanel -->
      </class> <!-- test.SolitairePanelTest -->
      <class name="test.ColumnTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.ColumnTest@111d5c97]" name="setUp" is-config="true" duration-ms="6" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetAvailableCards()[pri:0, instance:test.ColumnTest@111d5c97]" name="testGetAvailableCards" duration-ms="7" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAvailableCards -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.ColumnTest@111d5c97]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.ColumnTest@111d5c97]" name="setUp" is-config="true" duration-ms="7" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsValidMove()[pri:0, instance:test.ColumnTest@111d5c97]" name="testIsValidMove" duration-ms="1" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidMove -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.ColumnTest@111d5c97]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.ColumnTest@111d5c97]" name="setUp" is-config="true" duration-ms="6" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPush()[pri:0, instance:test.ColumnTest@111d5c97]" name="testPush" duration-ms="1" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPush -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.ColumnTest@111d5c97]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.ColumnTest@111d5c97]" name="setUp" is-config="true" duration-ms="5" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testStackIsValidMove()[pri:0, instance:test.ColumnTest@111d5c97]" name="testStackIsValidMove" duration-ms="1" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStackIsValidMove -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.ColumnTest@111d5c97]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.ColumnTest -->
      <class name="test.SolitaireBoardTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="beforeClass" is-config="true" duration-ms="99" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="createBoard()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="createBoard" duration-ms="109" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBoard -->
        <test-method status="PASS" signature="dealOutCustomBoard()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="dealOutCustomBoard" duration-ms="182" started-at="2017-04-30T03:14:01Z" finished-at="2017-04-30T03:14:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dealOutCustomBoard -->
        <test-method status="PASS" signature="getHint()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="getHint" duration-ms="2918" started-at="2017-04-30T03:14:02Z" finished-at="2017-04-30T03:14:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHint -->
        <test-method status="PASS" signature="getTimerNextGameStatus()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="getTimerNextGameStatus" duration-ms="1" started-at="2017-04-30T03:14:04Z" finished-at="2017-04-30T03:14:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTimerNextGameStatus -->
        <test-method status="PASS" signature="newGame()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="newGame" duration-ms="1462" started-at="2017-04-30T03:14:04Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newGame -->
        <test-method status="PASS" signature="resetStats()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="resetStats" duration-ms="4" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetStats -->
        <test-method status="PASS" signature="saveOptions()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="saveOptions" duration-ms="3" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveOptions -->
        <test-method status="PASS" signature="setAppearance()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setAppearance" duration-ms="130" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAppearance -->
        <test-method status="PASS" signature="setBackgroundNumber()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setBackgroundNumber" duration-ms="1" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setBackgroundNumber -->
        <test-method status="PASS" signature="setDeckNumber()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setDeckNumber" duration-ms="1" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDeckNumber -->
        <test-method status="PASS" signature="setDeckThroughs()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setDeckThroughs" duration-ms="1" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDeckThroughs -->
        <test-method status="PASS" signature="setDifficulty()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setDifficulty" duration-ms="1" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDifficulty -->
        <test-method status="PASS" signature="setDrawCount()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setDrawCount" duration-ms="0" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDrawCount -->
        <test-method status="PASS" signature="setNewDifficulty()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setNewDifficulty" duration-ms="0" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setNewDifficulty -->
        <test-method status="PASS" signature="setNewDrawCount()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setNewDrawCount" duration-ms="0" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setNewDrawCount -->
        <test-method status="PASS" signature="setTimerStatus()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setTimerStatus" duration-ms="2524" started-at="2017-04-30T03:14:06Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTimerStatus -->
        <test-method status="PASS" signature="setWinAnimationStatus()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setWinAnimationStatus" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setWinAnimationStatus -->
        <test-method status="PASS" signature="setWinSoundsStatus()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="setWinSoundsStatus" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setWinSoundsStatus -->
        <test-method status="PASS" signature="undoMove()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="undoMove" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- undoMove -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.SolitaireBoardTest@7112ce6]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.SolitaireBoardTest -->
      <class name="test.AcePileTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.AcePileTest@67536ae0]" name="setUp" is-config="true" duration-ms="20" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="AcePile()[pri:0, instance:test.AcePileTest@67536ae0]" name="AcePile" duration-ms="11" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AcePile -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.AcePileTest@67536ae0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.AcePileTest@67536ae0]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.AcePileTest@67536ae0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetCardAtLocationPoint()[pri:0, instance:test.AcePileTest@67536ae0]" name="testGetCardAtLocationPoint" duration-ms="5" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCardAtLocationPoint -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.AcePileTest@67536ae0]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.AcePileTest@67536ae0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsValidMoveCard()[pri:0, instance:test.AcePileTest@67536ae0]" name="testIsValidMoveCard" duration-ms="7" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidMoveCard -->
        <test-method status="PASS" signature="testIsValidMoveCardStack()[pri:0, instance:test.AcePileTest@67536ae0]" name="testIsValidMoveCardStack" duration-ms="2" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidMoveCardStack -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.AcePileTest@67536ae0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.AcePileTest@67536ae0]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.AcePileTest@67536ae0]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testPushCard()[pri:0, instance:test.AcePileTest@67536ae0]" name="testPushCard" duration-ms="7" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPushCard -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.AcePileTest@67536ae0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.AcePileTest@67536ae0]" name="tearDown" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.AcePileTest@67536ae0]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AcePileTest -->
      <class name="test.ChangeOptionsTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="ChangeOptions()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="ChangeOptions" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.ChangeOptions(ChangeOptionsTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeOptions -->
        <test-method status="FAIL" signature="actionPerformed()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="actionPerformed" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.actionPerformed(ChangeOptionsTest.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- actionPerformed -->
        <test-method status="FAIL" signature="getAnimation()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="getAnimation" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.getAnimation(ChangeOptionsTest.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnimation -->
        <test-method status="FAIL" signature="getDifficulty()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="getDifficulty" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.getDifficulty(ChangeOptionsTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDifficulty -->
        <test-method status="FAIL" signature="getDrawCount()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="getDrawCount" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.getDrawCount(ChangeOptionsTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDrawCount -->
        <test-method status="FAIL" signature="getSounds()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="getSounds" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.getSounds(ChangeOptionsTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSounds -->
        <test-method status="FAIL" signature="getTimer()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="getTimer" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.getTimer(ChangeOptionsTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTimer -->
        <test-method status="FAIL" signature="setup()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="setup" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeOptionsTest.setup(ChangeOptionsTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="test_actionPerformed_A$ActionEvent()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="test_actionPerformed_A$ActionEvent" duration-ms="2383" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:57Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at FourRowSolitaire.ChangeOptions.actionPerformed(ChangeOptions.java:236)
	at test.ChangeOptionsTest.test_actionPerformed_A$ActionEvent(ChangeOptionsTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_actionPerformed_A$ActionEvent -->
        <test-method status="PASS" signature="test_instantiation()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="test_instantiation" duration-ms="778" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_instantiation -->
        <test-method status="PASS" signature="test_type()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="test_type" duration-ms="0" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_type -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.ChangeOptionsTest@6bcb12e6]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.ChangeOptionsTest -->
      <class name="test.WinScreenTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.WinScreenTest@30ec7d21]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="test_instantiation()[pri:0, instance:test.WinScreenTest@30ec7d21]" name="test_instantiation" duration-ms="210" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_instantiation -->
        <test-method status="PASS" signature="test_type()[pri:0, instance:test.WinScreenTest@30ec7d21]" name="test_type" duration-ms="2" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_type -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.WinScreenTest@30ec7d21]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:09Z" finished-at="2017-04-30T03:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.WinScreenTest -->
      <class name="test.ChangeAppearanceTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="ChangeAppearance()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="ChangeAppearance" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeAppearance -->
        <test-method status="PASS" signature="actionPerformed()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="actionPerformed" duration-ms="18" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- actionPerformed -->
        <test-method status="FAIL" signature="getBackgroundNumber()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="getBackgroundNumber" duration-ms="2" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3] but found [-1]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:388)
	at org.testng.Assert.assertEquals(Assert.java:398)
	at test.ChangeAppearanceTest.getBackgroundNumber(ChangeAppearanceTest.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBackgroundNumber -->
        <test-method status="FAIL" signature="getDeckNumber()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="getDeckNumber" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3] but found [-1]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:388)
	at org.testng.Assert.assertEquals(Assert.java:398)
	at test.ChangeAppearanceTest.getDeckNumber(ChangeAppearanceTest.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeckNumber -->
        <test-method status="FAIL" signature="setup()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="setup" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
	at test.ChangeAppearanceTest.setup(ChangeAppearanceTest.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="test_instantiation()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="test_instantiation" duration-ms="5" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[-1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: -1
	at FourRowSolitaire.ChangeAppearance.setup(ChangeAppearance.java:89)
	at FourRowSolitaire.ChangeAppearance.<init>(ChangeAppearance.java:66)
	at test.ChangeAppearanceTest.test_instantiation(ChangeAppearanceTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_instantiation -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.ChangeAppearanceTest@17b37e9a]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.ChangeAppearanceTest -->
      <class name="test.DealDeckTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="8" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="DealDeck()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="DealDeck" duration-ms="1" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DealDeck -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="5" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getDeckThroughs()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="getDeckThroughs" duration-ms="1" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeckThroughs -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="5" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="hasDealsLeft()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="hasDealsLeft" duration-ms="653" started-at="2017-04-30T03:13:57Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hasDealsLeft -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="9" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="isValidMoveCard()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="isValidMoveCard" duration-ms="10" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidMoveCard -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="5" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="isValidMoveCardStack()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="isValidMoveCardStack" duration-ms="6" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidMoveCardStack -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="8" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="pop()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="pop" duration-ms="276" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pop -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="6" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="reset()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="reset" duration-ms="1" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="9" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setDeck()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="setDeck" duration-ms="13" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDeck -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="8" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setDeckThroughs()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="setDeckThroughs" duration-ms="1" started-at="2017-04-30T03:13:58Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDeckThroughs -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="5" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setDifficulty()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="setDifficulty" duration-ms="1" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDifficulty -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="5" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setDrawCount()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="setDrawCount" duration-ms="9" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDrawCount -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="beforeClass" is-config="true" duration-ms="5" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="undoPop()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="undoPop" duration-ms="484" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- undoPop -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.DealDeckTest@29c17c3d]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:59Z" finished-at="2017-04-30T03:13:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.DealDeckTest -->
      <class name="test.FireworksDisplayTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.FireworksDisplayTest@6d67f5eb]" name="beforeClass" is-config="true" duration-ms="2" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="FireworksDisplay()[pri:0, instance:test.FireworksDisplayTest@6d67f5eb]" name="FireworksDisplay" duration-ms="1" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FireworksDisplay -->
        <test-method status="PASS" signature="randomColor()[pri:0, instance:test.FireworksDisplayTest@6d67f5eb]" name="randomColor" duration-ms="4" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- randomColor -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.FireworksDisplayTest@6d67f5eb]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.FireworksDisplayTest -->
      <class name="test.DiscardPileTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="setUp" is-config="true" duration-ms="2" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="DiscardPile()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="DiscardPile" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DiscardPile -->
        <test-method status="PASS" signature="addCard()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="addCard" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCard -->
        <test-method status="PASS" signature="addStack()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="addStack" duration-ms="2" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addStack -->
        <test-method status="PASS" signature="isValidMoveCard()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="isValidMoveCard" duration-ms="1" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidMoveCard -->
        <test-method status="PASS" signature="isValidMoveCardStack()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="isValidMoveCardStack" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidMoveCardStack -->
        <test-method status="PASS" signature="pop()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="pop" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pop -->
        <test-method status="PASS" signature="pushCard()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="pushCard" duration-ms="5" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pushCard -->
        <test-method status="PASS" signature="pushCardStack()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="pushCardStack" duration-ms="3" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pushCardStack -->
        <test-method status="PASS" signature="setView()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="setView" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setView -->
        <test-method status="PASS" signature="testGetCardAtLocationPoint()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="testGetCardAtLocationPoint" duration-ms="1" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCardAtLocationPoint -->
        <test-method status="PASS" signature="testGetNumViewableCards()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="testGetNumViewableCards" duration-ms="3" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumViewableCards -->
        <test-method status="PASS" signature="testUndoPop()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="testUndoPop" duration-ms="1" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndoPop -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.DiscardPileTest@1665fa54]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:14:00Z" finished-at="2017-04-30T03:14:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.DiscardPileTest -->
      <class name="test.CardTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.CardTest@d16be4f]" name="setUp" is-config="true" duration-ms="10" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cardImageTest()[pri:0, instance:test.CardTest@d16be4f]" name="cardImageTest" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cardImageTest -->
        <test-method status="PASS" signature="cloneTest()[pri:0, instance:test.CardTest@d16be4f]" name="cloneTest" duration-ms="3" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cloneTest -->
        <test-method status="PASS" signature="faceUpTest()[pri:0, instance:test.CardTest@d16be4f]" name="faceUpTest" duration-ms="5" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- faceUpTest -->
        <test-method status="PASS" signature="gettersTest()[pri:0, instance:test.CardTest@d16be4f]" name="gettersTest" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettersTest -->
        <test-method status="PASS" signature="highlightTest()[pri:0, instance:test.CardTest@d16be4f]" name="highlightTest" duration-ms="4" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- highlightTest -->
        <test-method status="PASS" signature="test()[pri:0, instance:test.CardTest@d16be4f]" name="test" duration-ms="30" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="validSuitTest()[pri:0, instance:test.CardTest@d16be4f]" name="validSuitTest" duration-ms="1" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validSuitTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.CardTest@d16be4f]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-04-30T03:13:54Z" finished-at="2017-04-30T03:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CardTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
